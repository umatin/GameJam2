<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SpritesheetTest</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.textBoxInstantiated = false;

global.PlayerChar = self;

self.movementSpeed = 1;

self.currentSpriteImage = 0;

image_speed = 0;

self.old_time = 0;

self.charDirection = 1;

self.charMoving = false;

self.destinX = 50;
self.destinY = 50;

self.pathPoint = 0;

self.currentPath = path0;

persistent = true;

self.currentRoom = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (currentRoom == room)
{
    visible = true;
    
    destinX = path_get_point_x (self.currentPath,pathPoint);
    destinY = path_get_point_y (self.currentPath,pathPoint);
    
    show_debug_message(string(self.x) + " " + string(self.y));
    show_debug_message("Destin" + string(destinX) + " " + string(destinY));
    
    
    if !(self.x &gt; destinX - 1 &amp;&amp; self.x &lt; destinX + 1)
    {
        if (self.x &lt; destinX)
        {
            self.charDirection = 3;
        }
        else if (self.x &gt; destinX)
        {
            self.charDirection = 1;
        }
    }
    else if !(self.y &gt; destinY - 1 &amp;&amp; self.y &lt; destinY + 1)
    {
        if (self.y &lt; destinY)
        {
            self.charDirection = 2;
        }
        else if (self.y &gt; destinY)
        {
            self.charDirection = 0;
        }
    }
    
    if ((self.x &gt; destinX - 1 &amp;&amp; self.x &lt; destinX + 1) &amp;&amp; (self.y &gt; destinY - 1 &amp;&amp; self.y &lt; destinY + 1))
    {
        pathPoint ++;
    }
    
    if (path_get_number(self.currentPath) == pathPoint)
    {
        self.charMoving = false;
    }
    
    
    if (self.charMoving == true)
    {
        if (self.charDirection == 1)
        {
            if (place_free(self.x - self.movementSpeed, self.y))
            {
                self.x -= self.movementSpeed;
                
                if (current_time - old_time &gt; 300)
                {
                    if (self.currentSpriteImage != 8)
                    {
                        self.currentSpriteImage = 8;
                    }
                    else if(self.currentSpriteImage != 9)
                    {
                        self.currentSpriteImage = 9;
                    }
                    self.old_time = current_time;
                }
            }
        }
        if (self.charDirection == 3)
        {
            if (place_free(self.x + self.movementSpeed, self.y))
            {
                self.x += self.movementSpeed;
                
                if (current_time - old_time &gt; 300)
                {
                    if (self.currentSpriteImage != 3)
                    {
                        self.currentSpriteImage = 3;
                    }
                    else if(self.currentSpriteImage != 4)
                    {
                        self.currentSpriteImage = 4;
                    }
                    self.old_time = current_time;
                }
            }
        }
        
        if (self.charDirection == 2)
        {
            if (place_free( self.x, self.y + self.movementSpeed))
            {
                self.y += self.movementSpeed;
                if (current_time - old_time &gt; 300)
                {
                    if (self.currentSpriteImage != 0)
                    {
                        self.currentSpriteImage = 0;
                    }
                    else if(self.currentSpriteImage != 5)
                    {
                        self.currentSpriteImage = 5;
                    }
                    self.old_time = current_time;
                }
            }
        }
        
        if (self.charDirection == 0)
        {
            if (place_free(self.x, self.y - self.movementSpeed))
            {
                self.y -= self.movementSpeed;
                if (current_time - old_time &gt; 300)
                {
                    if (self.currentSpriteImage != 1)
                    {
                        self.currentSpriteImage = 1;
                    }
                    else if(self.currentSpriteImage != 6)
                    {
                        self.currentSpriteImage = 6;
                    }
                    self.old_time = current_time;
                }
            }
        }
    }
}
else
{
    visible = false;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = self.currentSpriteImage;
texture_set_interpolation(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
